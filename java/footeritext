import com.itextpdf.text.BadElementException;
import com.itextpdf.text.Chunk;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Element;
import com.itextpdf.text.ExceptionConverter;
import com.itextpdf.text.Font;
import com.itextpdf.text.Image;
import com.itextpdf.text.PageSize;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.Rectangle;
import com.itextpdf.text.pdf.ColumnText;
import com.itextpdf.text.pdf.PdfContentByte;
import com.itextpdf.text.pdf.PdfName;
import com.itextpdf.text.pdf.PdfNumber;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfPage;
import com.itextpdf.text.pdf.PdfPageEventHelper;
import com.itextpdf.text.pdf.PdfTemplate;
import com.itextpdf.text.pdf.PdfWriter;


public class HeaderAndFooter extends PdfPageEventHelper {
		public void onEndPage (PdfWriter writer, Document document) {
			PdfPTable footer = new PdfPTable(2);
	        footer.setTotalWidth(750);
	        footer.getDefaultCell().setBorder(PdfPCell.NO_BORDER);
	        PdfPCell cellDataProcessamento = new PdfPCell(recuperaPhrase("Data do processamento: "+FormatadorData.formatarData(new Date()), fonteTitulo));
	        cellDataProcessamento.setBorder(Rectangle.TOP);
	        PdfPCell cellPaginas = new PdfPCell(recuperaPhrase("PÃ¡gina: "+String.format("%d", writer.getPageNumber()), fonteTitulo));
	        cellPaginas.setHorizontalAlignment(Element.ALIGN_RIGHT);
	        cellPaginas.setBorder(Rectangle.TOP);
	        footer.addCell(cellDataProcessamento);
	        footer.addCell(cellPaginas);
	        footer.writeSelectedRows(0, -1, 50, 30, writer.getDirectContent());
		}
	}
